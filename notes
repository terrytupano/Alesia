------------------------------------------
TODOS:
------------------------------------------

- simulate the optimal upperboud of handsranks: motiviation: better probability calculation when there is extremely rare to find a hand like royal flush or straith flus
- simulation to compute the preflop % based on num of villans (the result were something like villans*10)

- lower limit in roi formula: 10% lower limmit in a bussines is 30% (read literature about it) maybe is util to make a table with detail investments 
- make a ROI formula: ROI = (Winnings - Investment) / Investment take into acount any moment in play when bet > lower limitn (roucht 10%)of roi , fold hero mus play until lower limit but once the limit is errreichen, dont gepardice any more also consider playtime 


---------------------------------------------------------------------

Ryzen-5-5500U
Intel-Core-i9-13900

New iot variable to contro the amount of invest in amocontrol (as factor of positive potential).

Rebuild the sim panel and create the range slider to incorporate multi stage tournaments (include grain as ui inpuit)/

Try to incorporate hidden hand. How hide is trooper.s hand??? As oportunity ?? Or check if this situatios is already covered by handstreng (using hand eval)

card abtraction
regret minimization java
tree search java


The database
can be viewed as split into four different parts, each
part containing the examples concerning a specific betting
round with a known classification


user the uoaevaluator to make a range of the board
to select the best players, count the number of wins

compute the variance tho remove the chips exchange (variance in chipsCount) in chipsCount is where the chips are stored !!!!!!!!!!!!!!!!!!!!!--------------------------

what happen if i check the complete tree or flop->turn-> river-> _showdow (on steps ahead) whit all powible strategies whith less simulations
		so i can decide the next step???????????????? the ide is only one step ahead whit all posible bet/call/reise options, and rebuild ammocontrol
		return a list with posible strategies
	
instance
player left 		(1-9)	(include only <= 9)
position			(1-9)
Street rank			(?-?)	
players street		(2-9)	the number of currnet players in the current round 
pot street			(?-?)

Game: 897360895 Street: Flop Round: 0 Player: mtew-boynk
Game: 897360895 Street: Flop Round: 0 Player: mtew-boynk

class label:	the vactor whit the current action

for every street, i need to build 10 treet 1 for each round. for every treee-round i need
action + action value. this is the class labes that the kdtree muss find. this mean:
	table status
	playersleft 3
	street flop
	pot xxx
	chips xxx
	....
	range xxx
	call: ---------------
	reise: --------------

the job from kdtree is to find knn whit action
		action: bet	amount: 10 ----- maybe can i code as 00 check. 110 call 10, 120 bet 20 120 reise 20 on so on. so i can add this action as atribute on the next tree-round???
--- show i build the sequence? for exmaple:
	flop
	round 1 check
	round 2 do i need take into acount, that in round 1, i select check? nooo. because what i am building is the complete game status for the current node. if so, the tree will explode and i need to build the tree structure with monte carlo methods. and that is out of the scope of this experiment.  how can i select, the next action? 
	-- option 1: find the knn for the next round (soft)
	
--- what happen if the current table status is not found inside kdtree? (i.e the only option is call an all in bet. the kdtree is designed to return a answer to normal table status (call/check/bet reise) so i need to add some sort of callback 

kdtree.nearestNeighbour(Instance target)

example-------------

 r r - - - - - - - -
 ...
 r c - - - - - - - -

Target pot: 130
    40    80     0     0     0     0     0     0     0     0
 ...
	60    40     0     0     0     0     0     0     0     0


tree: 
flop round 1 (first line of the tables)
---- label class: r (120 numeric code)

next tree
flop round 2 (first line of the tables)
all attributes + 120 (prev action): label class: r (120) (another reise 120)
and so on...

whit this aproach, every subsecuent tree diminish exponential in nodes resultin in something like:
	flop 100000 nodes
	trun 100 nodes
	river 10 nodes

